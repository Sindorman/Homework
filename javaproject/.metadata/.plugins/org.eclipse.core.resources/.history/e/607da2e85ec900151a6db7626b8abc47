
public class Test {

}

abstract class Animal {
	abstract public int numberOfLegs();
	abstract public boolean isWarmBlooded();
}

interface Named {
	public String name();
}

interface Pet extends Named {
	public Human owner();
}

abstract class Mammal extends Animal {
	public boolean isWarmBlooded() { return true; }
}

abstract class Fish extends Animal {
	public boolean isWarmBlooded() { return false; }
	public int numberOfLegs() { return 0; }
}

class Dog extends Mammal implements Pet {
	private String name; private Human owner;
	public int numberOfLegs() { return 4; }
	public Dog(String n, Human o) { name = n; owner = o; }
	public Human owner() { return owner; }
	public String name() { return name; }
}

class GoldFish extends Fish implements Pet {
	private String name; private Human owner;
	public GoldFish (String n, Human o) { name = n; owner = o; }
	public Human owner() { return owner; }
	public String name() { return name; }
}

class HoneyBadger extends Mammal {
	public int numberOfLegs() { return 4; }
	boolean cares() { return false; }
}

class Shark extends Fish {
	private boolean hasLaser;
	public Shark(boolean hasLaser) { this.hasLaser = hasLaser; }
	public boolean hasLaser() { return hasLaser; }
}

class Human extends Mammal implements Named { 
	private String name;
	public int numberOfLegs() { return 2; }
	public Human(String name) { this.name = name; }
	public String name() { return name; }
}

